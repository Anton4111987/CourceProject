@using CourceProject.Components.Data
@using CourceProject.Components.Models
@using CourceProject.Components.Services
@using Microsoft.AspNetCore.Components.Forms
@inject Blazored.SessionStorage.ISessionStorageService localStorage;
@inject IUserRepository _listUsers
@inject IToastService toastService
@inject ILogger<PasswordManager> logger
@inject NavigationManager navigationManager;

@page "/Profile"
@rendermode InteractiveServer

@if (isConnected)
{
    if (@_changeUser?.Id == 0)
    {
        toastService.ShowError("Пожалуйста авторизуйтесь!");
        navigationManager.NavigateTo("/Authorization");
    }
    else
    {
        <h3 style="color:blueviolet; font-style:oblique" align="center">@_pageTitle</h3>
        <br />
        <div class="container-fluid">
            <div class="col-md-4 offset-md-4" text-align="left">
                <div class="form-container">
                    <div class="form-icon"><i class="fa fa-user"></i></div>
                    <h3 class="title">Profile</h3>
                    <EditForm Model="@_changeUser" OnValidSubmit="SaveChanges" FormName="user_profile" class="form-horizontal">
                        <DataAnnotationsValidator />
                        <div class="form-group">
                            <label>Имя пользователя</label>
                            <InputText id="name" @bind-Value="@_changeUser!.Name" class="form-control" placeholder="Имя" />
                        </div>
                        <div class="form-group">
                            <label>Фамилия пользователя</label>
                            <InputText id="lastname" @bind-Value="@_changeUser.LastName" class="form-control" placeholder="Фамилия" />
                        </div>
                        <div class="form-group">
                            <label> Email пользователя</label>
                            <InputText id="email" @bind-Value="@_changeUser.Email" class="form-control" type="email" placeholder="Email" />
                        </div>
                      
                        <ValidationSummary />
                        <br />
                        <br /> <input type="submit" value="Сохранить изменения" class="btn btn-default">
                        <br />
                    </EditForm>
                </div>
            </div>
        </div>
    }
}
else
{
    <p><em>Loading...</em></p>
}




@code {
    private string _pageTitle = "Просмотр данных профиля/редактирование данных";
    private User? _user = new();
    private User? _changeUser=new();
    private ChangeUserPassword? changeUserPassword = new();
    private RepeatPassword repeatPassword { get; set; } = new();
    private bool isConnected;

    private async Task ReadLocalStorage()
    {
        _user!.Name = await localStorage.GetItemAsync<string>("userName");
        _user.Id = await localStorage.GetItemAsync<int>("userId");
        _user = await _listUsers.GetUserById(_user!.Id);
        _changeUser = (User)_user!.Clone();
    }

    private async void SaveChanges() // метод изменения пароля пользователя
    {
        if(_user!=_changeUser)
        {
            _user!.Name = _changeUser!.Name;
            _user.LastName = _changeUser.LastName;
            _user.Email = _changeUser.Email;
            await _listUsers.UpdateUser(_user);
            logger.LogInformation("Обновление данных пользователя {" + _user.Name +" " + _user.LastName +"}");
            toastService.ShowSuccess("Данные пользователя успешно обновлены");
            navigationManager.NavigateTo("/PasswordManager");
        }
        else
        {
            toastService.ShowSuccess("Изменений не зафиксировано");
        }
    }
    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            isConnected = true;
            await ReadLocalStorage();
            StateHasChanged();
        }
    }
}
